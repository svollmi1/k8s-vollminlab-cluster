apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2025-02-05T05:35:13Z"
  generation: 1
  labels:
    apiserver: "true"
    app.kubernetes.io/name: calico-apiserver
    k8s-app: calico-apiserver
  name: calico-apiserver
  namespace: calico-apiserver
  ownerReferences:
  - apiVersion: operator.tigera.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: APIServer
    name: default
    uid: 142c7fa5-f920-4ef9-a417-7055a76b5bfc
  resourceVersion: "4438733"
  uid: a46ea38e-b9ff-4d18-867e-19fe17db8d88
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      apiserver: "true"
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        tigera-operator.hash.operator.tigera.io/calico-apiserver-certs: 8fad2484ad401922c43edc29d6bce86533b76793
      creationTimestamp: null
      labels:
        apiserver: "true"
        app.kubernetes.io/name: calico-apiserver
        k8s-app: calico-apiserver
      name: calico-apiserver
      namespace: calico-apiserver
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  k8s-app: calico-apiserver
              namespaces:
              - calico-apiserver
              topologyKey: kubernetes.io/hostname
            weight: 100
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  k8s-app: calico-apiserver
              namespaces:
              - calico-apiserver
              topologyKey: topology.kubernetes.io/zone
            weight: 100
      containers:
      - args:
        - --secure-port=5443
        - --tls-private-key-file=/calico-apiserver-certs/tls.key
        - --tls-cert-file=/calico-apiserver-certs/tls.crt
        env:
        - name: DATASTORE_TYPE
          value: kubernetes
        - name: KUBERNETES_SERVICE_HOST
          value: 10.96.0.1
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        - name: MULTI_INTERFACE_MODE
          value: none
        image: docker.io/calico/apiserver:v3.29.1
        imagePullPolicy: IfNotPresent
        name: calico-apiserver
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 5443
            scheme: HTTPS
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsGroup: 10001
          runAsNonRoot: true
          runAsUser: 10001
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /calico-apiserver-certs
          name: calico-apiserver-certs
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: calico-apiserver
      serviceAccountName: calico-apiserver
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - name: calico-apiserver-certs
        secret:
          defaultMode: 420
          secretName: calico-apiserver-certs
status:
  availableReplicas: 2
  conditions:
  - lastTransitionTime: "2025-02-05T05:35:13Z"
    lastUpdateTime: "2025-02-05T05:35:21Z"
    message: ReplicaSet "calico-apiserver-86dcdf7474" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2025-02-08T06:45:04Z"
    lastUpdateTime: "2025-02-08T06:45:04Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 1
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 2
